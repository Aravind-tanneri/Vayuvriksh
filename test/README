Vayuvriksh - ESP32 Aeroponics Controller üåø
  "Vayuvriksh" (‡§µ‡§æ‡§Ø‡•Å‡§µ‡•É‡§ï‡•ç‡§∑ - Air Tree) is a comprehensive, IoT-enabled controller for automated aeroponics systems, built on the ESP32 platform. It hosts a real-time web dashboard for monitoring sensor data, viewing historical trends, and manually controlling system functions.

![Vayuvriksh Dashboard](PASTE_YOUR_COPIED_IMAGE_URL_HERE)

‚ú® Features
  Real-Time Web Dashboard: Access a responsive, grid-based dashboard from any device on your network.
  
  Live Sensor Monitoring: Continuously tracks pH, Electrical Conductivity (EC), and ambient light levels.
  
  Dynamic Data Charting: Plots sensor data over time using Chart.js for easy trend analysis.
  
  Automated Pump Cycles: Manages a single pump for both misting and flushing operations on independent, configurable timers.
  
  Automated Grow Lights: Controls grow lights based on a light-dependent resistor (LDR) to ensure plants get enough light.
  
  Intelligent Alerts & Dosing:
  
  Monitors pH and EC levels against user-defined thresholds.
  
  Provides alerts and calculates suggested doses for nutrient solutions ("Jeevan" & "Shakti") and pH adjusters ("Vriddhi" & "Saman").
  
  Manual Overrides: A full suite of controls on the dashboard to:
  
  Start a manual pump cycle.

  Force stop all automated operations.
  
  Resume the system after a halt.

üõ†Ô∏è Technology Stack
  Hardware
    Microcontroller: ESP32 DevKit V1
    
    Sensors:
    
    pH Sensor (Analog)
    
    EC Sensor (Analog)
    
    LDR (Light Dependent Resistor)
    
    Actuators:
    
    2x 5V Relay Modules (for pump and grow light)

  Software
    Framework: C++ on the Arduino Framework
    
    IDE: PlatformIO in Visual Studio Code
    
    Simulation: Wokwi Simulator
    
    Key Libraries: WebServer.h, WiFi.h
    
    Frontend: HTML, CSS, and vanilla JavaScript with Chart.js loaded from a CDN.

üîå Hardware & Wiring
This project uses the following pin configuration, which can be adjusted in main.cpp.

Component	Connected to ESP32 Pin
Water Pump Relay IN	GPIO 16
Grow Light Relay IN	GPIO 17
pH Sensor Analog Out	GPIO 34
EC Sensor Analog Out	GPIO 35
LDR Sensor Analog Out	GPIO 32
Note: Relays require a 5V power source for their VCC pin to function correctly.

üöÄ Getting Started
Prerequisites
Visual Studio Code with the PlatformIO IDE extension.

All necessary hardware from the list above.

Configuration
Before uploading, you must configure the following constants at the top of the main.cpp file:

WiFi Credentials:

C++

const char* ssid = "YourWiFi_SSID";
const char* password = "YourWiFi_Password";
Reservoir Volume: This is critical for accurate dosing calculations.

C++

const float RESERVOIR_VOLUME_L = 20.0; // Set to your tank's volume in Liters
Relay Logic: This code is configured for active-high relays (a HIGH signal turns them ON). If your relays turn on with a LOW signal, simply swap these two lines:

C++

const int RELAY_ON = HIGH;
const int RELAY_OFF = LOW;
Cycle Timers: Adjust the PUMP_INTERVAL and PUMP_DURATION to fit your plants' needs. The times are in milliseconds.

Installation
Clone this repository to your local machine.

Open the project folder in VS Code.

Modify the configuration values in main.cpp as described above.

Connect your ESP32 board, select the correct COM port in PlatformIO, and click "Upload".

üíª Usage
After uploading, open the Serial Monitor in PlatformIO (baud rate 115200).

The ESP32 will connect to your WiFi and print its IP address.

Open a web browser on any device connected to the same WiFi network.

Navigate to the IP address shown in the Serial Monitor (e.g., http://192.168.1.123).

The Vayuvriksh dashboard will load, displaying live data and controls.

üìú License
This project is licensed under the MIT License.
